
import RaySmll::Raylib
import RaySmll::RayColor


type RayCore = "rCore"
fn raylib_core(rl: Raylib): RayCore => {
  val core = null of RayCore
  java {
    "core = rl.core;"
  }
  core
}

fn raylib_core_set_target_fps(core: RayCore, fps: Int): Unit => {
  java {
    "core.SetTargetFPS(fps.intValue());"
  }
  ()
}


fn raylib_core_init_window(cr: RayCore, title: String, width: Int, height: Int): Unit => {
  java {
    "cr.InitWindow(width, height, title);"
  }
  ()
}

fn raylib_core_window_should_close(cr: RayCore): Bool => {
  val cond = false
  java {
    "cond = cr.WindowShouldClose();"
  }
  cond
}

fn raylib_core_begin_drawing(cr: RayCore): Unit => {
  java {
    "cr.BeginDrawing();"
  }
  ()
}


fn raylib_core_end_drawing(cr: RayCore): Unit => {
  java {
    "cr.EndDrawing();"
  }
  ()
}

fn raylib_core_clear_backgroud(cr: RayCore, color: RayColor): Unit => {
  java {
    "cr.ClearBackground(color);"
  }
  ()
}

